--- a/CHANGES	2016-06-01 11:38:41.423584189 +0000
+++ b/CHANGES	2016-05-31 13:43:55.000000000 +0000
@@ -1,4 +1,11 @@
 
+Changes with nginx 1.11.1                                        31 May 2016
+
+    *) Security: a segmentation fault might occur in a worker process while
+       writing a specially crafted request body to a temporary file
+       (CVE-2016-4450); the bug had appeared in 1.3.9.
+
+
 Changes with nginx 1.11.0                                        24 May 2016
 
     *) Feature: the "transparent" parameter of the "proxy_bind",
--- a/CHANGES.ru	2016-06-01 11:38:41.427584130 +0000
+++ b/CHANGES.ru	2016-05-31 13:43:54.000000000 +0000
@@ -1,4 +1,11 @@
 
+Изменения в nginx 1.11.1                                          31.05.2016
+
+    *) Безопасность: при записи тела специально созданного запроса во
+       временный файл в рабочем процессе мог происходить segmentation fault
+       (CVE-2016-4450); ошибка появилась в 1.3.9.
+
+
 Изменения в nginx 1.11.0                                          24.05.2016
 
     *) Добавление: параметр transparent директив proxy_bind, fastcgi_bind,
diff --git a/src/core/nginx.h b/src/core/nginx.h
index 2e7cb4c..8eba7da 100644
--- a/src/core/nginx.h
+++ b/src/core/nginx.h
@@ -9,8 +9,8 @@
 #define _NGINX_H_INCLUDED_
 
 
-#define nginx_version      1011000
-#define NGINX_VERSION      "1.11.0"
+#define nginx_version      1011001
+#define NGINX_VERSION      "1.11.1"
 #define NGINX_VER          "nginx/" NGINX_VERSION
 
 #ifdef NGX_BUILD
diff --git a/src/http/v2/ngx_http_v2.c b/src/http/v2/ngx_http_v2.c
index cd0243c..208f0f3 100644
--- a/src/http/v2/ngx_http_v2.c
+++ b/src/http/v2/ngx_http_v2.c
@@ -3544,7 +3544,7 @@ ngx_http_v2_read_request_body(ngx_http_request_t *r,
     }
 
     if (r->request_body_no_buffering) {
-        size = len - h2scf->preread_size;
+        size = (size_t) len - h2scf->preread_size;
 
     } else {
         stream->no_flow_control = 1;
diff --git a/src/os/unix/ngx_files.c b/src/os/unix/ngx_files.c
index 65c79a2..7fbb7c9 100644
--- a/src/os/unix/ngx_files.c
+++ b/src/os/unix/ngx_files.c
@@ -356,6 +356,11 @@ ngx_chain_to_iovec(ngx_iovec_t *vec, ngx_chain_t *cl)
     n = 0;
 
     for ( /* void */ ; cl; cl = cl->next) {
+
+        if (ngx_buf_special(cl->buf)) {
+            continue;
+        }
+
         size = cl->buf->last - cl->buf->pos;
 
         if (prev == cl->buf->pos) {

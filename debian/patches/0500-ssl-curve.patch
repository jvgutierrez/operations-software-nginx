commit c26c048aa84f7cc5398150c3a2de796086d27275
Author: Brandon Black <bblack@wikimedia.org>
Date:   Wed Nov 9 18:22:20 2016 +0000

    XXX temp patch for curve to test
    
    Change-Id: I51f2cd62f66d058a773103d3317b531900fe495c

--- a/src/event/ngx_event_openssl.c
+++ b/src/event/ngx_event_openssl.c
@@ -8,6 +8,7 @@
 #include <ngx_config.h>
 #include <ngx_core.h>
 #include <ngx_event.h>
+#include <openssl/objects.h>
 
 
 #define NGX_SSL_PASSWORD_BUFFER_SIZE  4096
@@ -1240,7 +1241,6 @@
                 ngx_log_debug0(NGX_LOG_DEBUG_EVENT, c->log, 0,
                                "SSL reused session");
             }
-
         } else {
             ngx_log_debug0(NGX_LOG_DEBUG_EVENT, c->log, 0,
                            "SSL no shared ciphers");
@@ -2452,6 +2452,7 @@
     ngx_ssl_sess_id_t        *sess_id;
     ngx_ssl_session_cache_t  *cache;
     u_char                    buf[NGX_SSL_MAX_SESSION_SIZE];
+    const char               *ciph;
 
     len = i2d_SSL_SESSION(sess, NULL);
 
@@ -2466,6 +2467,12 @@
 
     c = ngx_ssl_get_connection(ssl_conn);
 
+    ciph = SSL_get_cipher_name(ssl_conn);
+    if (ciph && !strncmp("ECDHE-", ciph, 6))
+        c->ssl->curve_nid = SSL_get_shared_curve(c->ssl->connection, 0);
+    else
+        c->ssl->curve_nid = NID_undef;
+
     ssl_ctx = c->ssl->session_ctx;
     shm_zone = SSL_CTX_get_ex_data(ssl_ctx, ngx_ssl_session_cache_index);
 
@@ -2557,6 +2564,7 @@
     sess_id->id = id;
     sess_id->len = len;
     sess_id->session = cached_sess;
+    sess_id->curve_nid = c->ssl->curve_nid;
 
     sess_id->expire = ngx_time() + SSL_CTX_get_timeout(ssl_ctx);
 
@@ -2654,6 +2662,7 @@
 
             if (sess_id->expire > ngx_time()) {
                 ngx_memcpy(buf, sess_id->session, sess_id->len);
+                c->ssl->curve_nid = sess_id->curve_nid;
 
                 ngx_shmtx_unlock(&shpool->mutex);
 
@@ -3307,6 +3316,14 @@
     return NGX_OK;
 }
 
+
+ngx_int_t
+ngx_ssl_get_ecdhe_curve_name(ngx_connection_t *c, ngx_pool_t *pool, ngx_str_t *s)
+{
+    s->data = (u_char *) OBJ_nid2sn(c->ssl->curve_nid);
+    return NGX_OK;
+}
+
 
 ngx_int_t
 ngx_ssl_get_session_id(ngx_connection_t *c, ngx_pool_t *pool, ngx_str_t *s)
--- a/src/event/ngx_event_openssl.h
+++ b/src/event/ngx_event_openssl.h
@@ -77,6 +77,7 @@
     ngx_int_t                   last;
     ngx_buf_t                  *buf;
     size_t                      buffer_size;
+    int                         curve_nid;
 
     ngx_connection_handler_pt   handler;
 
@@ -113,6 +114,7 @@
     u_char                     *session;
     ngx_queue_t                 queue;
     time_t                      expire;
+    int                         curve_nid;
 #if (NGX_PTR_SIZE == 8)
     void                       *stub;
     u_char                      sess_id[32];
@@ -204,6 +206,8 @@
     ngx_str_t *s);
 ngx_int_t ngx_ssl_get_cipher_name(ngx_connection_t *c, ngx_pool_t *pool,
     ngx_str_t *s);
+ngx_int_t ngx_ssl_get_ecdhe_curve_name(ngx_connection_t *c, ngx_pool_t *pool,
+    ngx_str_t *s);
 ngx_int_t ngx_ssl_get_session_id(ngx_connection_t *c, ngx_pool_t *pool,
     ngx_str_t *s);
 ngx_int_t ngx_ssl_get_session_reused(ngx_connection_t *c, ngx_pool_t *pool,
--- a/src/http/modules/ngx_http_ssl_module.c
+++ b/src/http/modules/ngx_http_ssl_module.c
@@ -311,6 +311,9 @@
     { ngx_string("ssl_cipher"), NULL, ngx_http_ssl_static_variable,
       (uintptr_t) ngx_ssl_get_cipher_name, NGX_HTTP_VAR_CHANGEABLE, 0 },
 
+    { ngx_string("ssl_ecdhe_curve"), NULL, ngx_http_ssl_static_variable,
+      (uintptr_t) ngx_ssl_get_ecdhe_curve_name, NGX_HTTP_VAR_CHANGEABLE, 0 },
+
     { ngx_string("ssl_session_id"), NULL, ngx_http_ssl_variable,
       (uintptr_t) ngx_ssl_get_session_id, NGX_HTTP_VAR_CHANGEABLE, 0 },
 
--- a/src/stream/ngx_stream_ssl_module.c
+++ b/src/stream/ngx_stream_ssl_module.c
@@ -182,6 +182,9 @@
     { ngx_string("ssl_cipher"), NULL, ngx_stream_ssl_static_variable,
       (uintptr_t) ngx_ssl_get_cipher_name, NGX_STREAM_VAR_CHANGEABLE, 0 },
 
+    { ngx_string("ssl_ecdhe_curve"), NULL, ngx_stream_ssl_static_variable,
+      (uintptr_t) ngx_ssl_get_ecdhe_curve_name, NGX_STREAM_VAR_CHANGEABLE, 0 },
+
     { ngx_string("ssl_session_id"), NULL, ngx_stream_ssl_variable,
       (uintptr_t) ngx_ssl_get_session_id, NGX_STREAM_VAR_CHANGEABLE, 0 },
 

From 4a3e6d915f03d69954961d3d21f6088ce516e196 Mon Sep 17 00:00:00 2001
From: Brandon L Black <blblack@gmail.com>
Date: Thu, 18 Jun 2015 14:29:24 +0000
Subject: [PATCH 5/7] Stapling : fixing indentation

NOTE: This was the only patch in this series which didn't apply
cleanly to 1.9.2.  I had to do a pair of fixups for new code added
since, but they were was trivial (just indented the new code as
well, so that this is still a whitespace-only commit, aside from
the (existing) reordering of local variable declarations in one
file).

These patches are based on the ones from Filipe da Silva here:
http://mailman.nginx.org/pipermail/nginx-devel/2015-March/006734.html
03-FixIndentation.diff
 # HG changeset patch
 # Parent  3e2f451bd0366149bb0d56782351ad69fd05a9b9
---
 src/event/ngx_event_openssl_stapling.c | 103 ++++++++++++++++-----------------
 1 file changed, 51 insertions(+), 52 deletions(-)

diff --git a/src/event/ngx_event_openssl_stapling.c b/src/event/ngx_event_openssl_stapling.c
index 5ceb5dc..4d53fb5 100644
--- a/src/event/ngx_event_openssl_stapling.c
+++ b/src/event/ngx_event_openssl_stapling.c
@@ -693,43 +693,43 @@ ngx_ssl_stapling_ocsp_handler(ngx_ssl_ocsp_ctx_t *ctx)
 
     for (i = 0; i < nelts; i++, cert++, issuer++) {
 
-    id = OCSP_cert_to_id(NULL, cert->x509, issuer->x509);
-    if (id == NULL) {
-        ngx_ssl_error(NGX_LOG_CRIT, ctx->log, 0,
-                      "OCSP_cert_to_id() failed");
-        goto error;
-    }
+        id = OCSP_cert_to_id(NULL, cert->x509, issuer->x509);
+        if (id == NULL) {
+            ngx_ssl_error(NGX_LOG_CRIT, ctx->log, 0,
+                          "OCSP_cert_to_id() failed");
+            goto error;
+        }
 
-    if (OCSP_resp_find_status(basic, id, &n, NULL, NULL,
-                              &thisupdate, &nextupdate)
-        != 1)
-    {
-        ngx_log_error(NGX_LOG_ERR, ctx->log, 0,
-                      "certificate status not found in the OCSP response");
-        goto error;
-    }
+        if (OCSP_resp_find_status(basic, id, &n, NULL, NULL,
+                                  &thisupdate, &nextupdate)
+            != 1)
+        {
+            ngx_log_error(NGX_LOG_ERR, ctx->log, 0,
+                          "certificate status not found in the OCSP response");
+            goto error;
+        }
 
-    if (n != V_OCSP_CERTSTATUS_GOOD) {
-        ngx_log_error(NGX_LOG_ERR, ctx->log, 0,
-                      "certificate status \"%s\" in the OCSP response",
-                      OCSP_cert_status_str(n));
-        goto error;
-    }
+        if (n != V_OCSP_CERTSTATUS_GOOD) {
+            ngx_log_error(NGX_LOG_ERR, ctx->log, 0,
+                          "certificate status \"%s\" in the OCSP response",
+                          OCSP_cert_status_str(n));
+            goto error;
+        }
 
-    if (OCSP_check_validity(thisupdate, nextupdate, 300, -1) != 1) {
-        ngx_ssl_error(NGX_LOG_ERR, ctx->log, 0,
-                      "OCSP_check_validity() failed");
-        goto error;
-    }
+        if (OCSP_check_validity(thisupdate, nextupdate, 300, -1) != 1) {
+            ngx_ssl_error(NGX_LOG_ERR, ctx->log, 0,
+                          "OCSP_check_validity() failed");
+            goto error;
+        }
 
-    valid = ngx_ssl_stapling_time(nextupdate);
-    if (valid == (time_t) NGX_ERROR) {
-        ngx_log_error(NGX_LOG_ERR, ctx->log, 0,
-                      "invalid nextUpdate time in certificate status");
-        goto error;
-    }
+        valid = ngx_ssl_stapling_time(nextupdate);
+        if (valid == (time_t) NGX_ERROR) {
+            ngx_log_error(NGX_LOG_ERR, ctx->log, 0,
+                          "invalid nextUpdate time in certificate status");
+            goto error;
+        }
 
-    OCSP_CERTID_free(id);
+        OCSP_CERTID_free(id);
     }   /* END OF For each 'cert/issuer' pair */
    
     OCSP_BASICRESP_free(basic);
@@ -1244,15 +1244,14 @@ ngx_ssl_ocsp_dummy_handler(ngx_event_t *ev)
 static ngx_int_t
 ngx_ssl_ocsp_create_request(ngx_ssl_ocsp_ctx_t *ctx)
 {
-    int            len;
-    u_char        *p;
-    uintptr_t      escape;
-    ngx_str_t      binary, base64;
-    ngx_buf_t     *b;
-    OCSP_CERTID   *id;
-    OCSP_REQUEST  *ocsp;
-
+    int                     len;
+    u_char                 *p;
+    uintptr_t               escape;
     ngx_uint_t              i, nelts;
+    ngx_str_t               binary, base64;
+    ngx_buf_t              *b;
+    OCSP_CERTID            *id;
+    OCSP_REQUEST           *ocsp;
     ngx_ssl_certificate_t  *cert;
     ngx_ssl_certificate_t  *issuer;
 
@@ -1269,19 +1268,19 @@ ngx_ssl_ocsp_create_request(ngx_ssl_ocsp_ctx_t *ctx)
 
     for (i = 0; i < nelts; i++, cert++, issuer++) {
 
-    id = OCSP_cert_to_id(NULL, cert->x509, issuer->x509);
-    if (id == NULL) {
-        ngx_ssl_error(NGX_LOG_CRIT, ctx->log, 0,
-                      "OCSP_cert_to_id() failed");
-        goto failed;
-    }
+        id = OCSP_cert_to_id(NULL, cert->x509, issuer->x509);
+        if (id == NULL) {
+            ngx_ssl_error(NGX_LOG_CRIT, ctx->log, 0,
+                          "OCSP_cert_to_id() failed");
+            goto failed;
+        }
 
-    if (OCSP_request_add0_id(ocsp, id) == NULL) {
-        ngx_ssl_error(NGX_LOG_CRIT, ctx->log, 0,
-                      "OCSP_request_add0_id() failed");
-        OCSP_CERTID_free(id);
-        goto failed;
-    }
+        if (OCSP_request_add0_id(ocsp, id) == NULL) {
+            ngx_ssl_error(NGX_LOG_CRIT, ctx->log, 0,
+                          "OCSP_request_add0_id() failed");
+            OCSP_CERTID_free(id);
+            goto failed;
+        }
     }   /* END OF For each 'cert/issuer' pair */
 
     len = i2d_OCSP_REQUEST(ocsp, NULL);
-- 
2.1.0

